-- The C compiler identification is GNU 5.3.0
-- The CXX compiler identification is GNU 4.8.2
-- Check for working C compiler: /usr/local/bin/gcc-5.3.0
-- Check for working C compiler: /usr/local/bin/gcc-5.3.0 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Looking for include file pthread.h
-- Looking for include file pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Looking for numa_available in /usr/lib/x86_64-linux-gnu/libnuma.so
-- Looking for numa_available in /usr/lib/x86_64-linux-gnu/libnuma.so - found
-- Looking for numa_allocate_nodemask in /usr/lib/x86_64-linux-gnu/libnuma.so
-- Looking for numa_allocate_nodemask in /usr/lib/x86_64-linux-gnu/libnuma.so - found
-- Found NUMA: /usr/lib/x86_64-linux-gnu/libnuma.so  
-- Found Intel TBB
-- Performing Test HAVE_CILK
-- Performing Test HAVE_CILK - Failed
-- Performing Test HAVE_HUGEPAGES
-- Performing Test HAVE_HUGEPAGES - Success
-- Huge pages found
-- Boost version: 1.50.0
-- Try C++11 flag = [-qlanglvl=extended0x]
-- Performing Test CXX11_FLAG_DETECTED
-- Performing Test CXX11_FLAG_DETECTED - Failed
-- Try C++11 flag = [-std=c++11]
-- Performing Test CXX11_FLAG_DETECTED
-- Performing Test CXX11_FLAG_DETECTED - Success
-- Found CXX11: YES  
-- Performing Test HAVE_CXX11_UNIFORM_INT_DISTRIBUTION
-- Performing Test HAVE_CXX11_UNIFORM_INT_DISTRIBUTION - Success
-- Performing Test HAVE_CXX11_UNIFORM_REAL_DISTRIBUTION
-- Performing Test HAVE_CXX11_UNIFORM_REAL_DISTRIBUTION - Success
-- Performing Test HAVE_CXX11_ALIGNOF
-- Performing Test HAVE_CXX11_ALIGNOF - Success
-- Check if the system is big endian
-- Searching 16 bit integer
-- Looking for sys/types.h
-- Looking for sys/types.h - found
-- Looking for stdint.h
-- Looking for stdint.h - found
-- Looking for stddef.h
-- Looking for stddef.h - found
-- Check size of unsigned short
-- Check size of unsigned short - done
-- Using unsigned short
-- Check if the system is big endian - little endian
-- Looking for include file endian.h
-- Looking for include file endian.h - found
-- Looking for le64toh
-- Looking for le64toh - found
-- Looking for le32toh
-- Looking for le32toh - found
-- Looking for argz.h
-- Looking for argz.h - found
-- Looking for assert.h
-- Looking for assert.h - found
-- Looking for ctype.h
-- Looking for ctype.h - found
-- Looking for dirent.h
-- Looking for dirent.h - found
-- Looking for dl.h
-- Looking for dl.h - not found
-- Looking for dld.h
-- Looking for dld.h - not found
-- Looking for dlfcn.h
-- Looking for dlfcn.h - found
-- Looking for errno.h
-- Looking for errno.h - found
-- Looking for execinfo.h
-- Looking for execinfo.h - found
-- Looking for fcntl.h
-- Looking for fcntl.h - found
-- Looking for inttypes.h
-- Looking for inttypes.h - found
-- Looking for limits.h
-- Looking for limits.h - found
-- Looking for link.h
-- Looking for link.h - found
-- Looking for malloc.h
-- Looking for malloc.h - found
-- Looking for malloc/malloc.h
-- Looking for malloc/malloc.h - not found
-- Looking for memory.h
-- Looking for memory.h - found
-- Looking for ndir.h
-- Looking for ndir.h - not found
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for setjmp.h
-- Looking for setjmp.h - found
-- Looking for signal.h
-- Looking for signal.h - found
-- Looking for stdio.h
-- Looking for stdio.h - found
-- Looking for stdlib.h
-- Looking for stdlib.h - found
-- Looking for string.h
-- Looking for string.h - found
-- Looking for strings.h
-- Looking for strings.h - found
-- Looking for sys/dir.h
-- Looking for sys/dir.h - found
-- Looking for sys/dl.h
-- Looking for sys/dl.h - not found
-- Looking for sys/ioctl.h
-- Looking for sys/ioctl.h - found
-- Looking for sys/mman.h
-- Looking for sys/mman.h - found
-- Looking for sys/ndir.h
-- Looking for sys/ndir.h - not found
-- Looking for sys/param.h
-- Looking for sys/param.h - found
-- Looking for sys/resource.h
-- Looking for sys/resource.h - found
-- Looking for sys/stat.h
-- Looking for sys/stat.h - found
-- Looking for sys/time.h
-- Looking for sys/time.h - found
-- Looking for sys/uio.h
-- Looking for sys/uio.h - found
-- Looking for sys/wait.h
-- Looking for sys/wait.h - found
-- Looking for termios.h
-- Looking for termios.h - found
-- Looking for unistd.h
-- Looking for unistd.h - found
-- Looking for utime.h
-- Looking for utime.h - found
-- Looking for valgrind/valgrind.h
-- Looking for valgrind/valgrind.h - found
-- Looking for windows.h
-- Looking for windows.h - not found
-- Looking for fenv.h
-- Looking for fenv.h - found
-- Looking for mach/mach.h
-- Looking for mach/mach.h - not found
-- Looking for mach-o/dyld.h
-- Looking for mach-o/dyld.h - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Looking for pthread_getspecific in pthread
-- Looking for pthread_getspecific in pthread - found
-- Looking for pthread_rwlock_init in pthread
-- Looking for pthread_rwlock_init in pthread - found
-- Looking for dlopen in dl
-- Looking for dlopen in dl - found
-- Looking for getpagesize
-- Looking for getpagesize - found
-- Looking for getrusage
-- Looking for getrusage - found
-- Looking for setrlimit
-- Looking for setrlimit - found
-- Looking for isatty
-- Looking for isatty - found
-- Looking for index
-- Looking for index - found
-- Looking for isinf
-- Looking for isinf - not found
-- Looking for isinf
-- Looking for isinf - found
-- Looking for finite
-- Looking for finite - not found
-- Looking for isnan
-- Looking for isnan - not found
-- Looking for isnan
-- Looking for isnan - found
-- Looking for ceilf
-- Looking for ceilf - found
-- Looking for floorf
-- Looking for floorf - found
-- Looking for fmodf
-- Looking for fmodf - found
-- Looking for longjmp
-- Looking for longjmp - found
-- Looking for setjmp
-- Looking for setjmp - found
-- Looking for siglongjmp
-- Looking for siglongjmp - found
-- Looking for sigsetjmp
-- Looking for sigsetjmp - found
-- Looking for writev
-- Looking for writev - found
-- Looking for nearbyintf
-- Looking for nearbyintf - found
-- Looking for mallinfo
-- Looking for mallinfo - found
-- Looking for malloc_zone_statistics
-- Looking for malloc_zone_statistics - not found
-- Looking for mkdtemp
-- Looking for mkdtemp - found
-- Looking for mkstemp
-- Looking for mkstemp - found
-- Looking for mktemp
-- Looking for mktemp - found
-- Looking for closedir
-- Looking for closedir - found
-- Looking for opendir
-- Looking for opendir - found
-- Looking for readdir
-- Looking for readdir - found
-- Looking for getcwd
-- Looking for getcwd - found
-- Looking for gettimeofday
-- Looking for gettimeofday - found
-- Looking for getrlimit
-- Looking for getrlimit - found
-- Looking for rindex
-- Looking for rindex - found
-- Looking for strchr
-- Looking for strchr - found
-- Looking for strcmp
-- Looking for strcmp - found
-- Looking for strdup
-- Looking for strdup - found
-- Looking for strrchr
-- Looking for strrchr - found
-- Looking for pthread_mutex_lock
-- Looking for pthread_mutex_lock - found
-- Looking for sbrk
-- Looking for sbrk - found
-- Looking for srand48
-- Looking for srand48 - found
-- Looking for lrand48
-- Looking for lrand48 - found
-- Looking for drand48
-- Looking for drand48 - found
-- Looking for strtoll
-- Looking for strtoll - found
-- Looking for strtoq
-- Looking for strtoq - found
-- Looking for strerror
-- Looking for strerror - found
-- Looking for strerror_r
-- Looking for strerror_r - found
-- Looking for strerror_s
-- Looking for strerror_s - not found
-- Looking for memcpy
-- Looking for memcpy - found
-- Looking for memmove
-- Looking for memmove - found
-- Looking for setenv
-- Looking for setenv - found
-- Looking for argz_append
-- Looking for argz_append - found
-- Looking for argz_create_sep
-- Looking for argz_create_sep - found
-- Looking for argz_insert
-- Looking for argz_insert - found
-- Looking for argz_next
-- Looking for argz_next - found
-- Looking for argz_stringify
-- Looking for argz_stringify - found
-- Looking for dlerror
-- Looking for dlerror - found
-- Looking for dlopen
-- Looking for dlopen - found
-- Performing Test HAVE_INT64_T
-- Performing Test HAVE_INT64_T - Success
-- Performing Test HAVE_UINT64_T
-- Performing Test HAVE_UINT64_T - Success
-- Performing Test HAVE_U_INT64_T
-- Performing Test HAVE_U_INT64_T - Success
-- Performing Test HAVE_ERROR_T
-- Performing Test HAVE_ERROR_T - Success
-- Build of bfs-schardl will be skipped because CILK is not available
-- Build of bfs-pbbs will be skipped because CILK is not available
-- Build of delaunayrefinement-pbbs will be skipped because CILK is not available
-- Build of delaunaytriangulation-pbbs will be skipped because CILK is not available
-- Build of independentset-pbbs will be skipped because CILK is not available
-- Build of kruskal-pbbs will be skipped because CILK is not available
-- Found Doxygen: /usr/bin/doxygen (found version "1.8.6") 
-- Found DOXYFILE_IN: /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/Doxyfile.in  
-- Configuring done
-- Generating done
-- Build files have been written to: /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/build/debug
Scanning dependencies of target ll
make[3]: Warning: File `src/ll/CMakeFiles/ll.dir/depend.make' has modification time 0.013 s in the future
Scanning dependencies of target llvm
make[3]: Warning: File `src/llvm/CMakeFiles/llvm.dir/depend.make' has modification time 0.013 s in the future
[  9%] [  9%] [  9%] [ 16%] [ 16%] Building CXX object src/ll/CMakeFiles/ll.dir/EnvCheck.cpp.o
[ 19%] Building CXX object src/ll/CMakeFiles/ll.dir/TID.cpp.o
Building CXX object src/ll/CMakeFiles/ll.dir/HWTopoLinux.cpp.o
Building CXX object src/ll/CMakeFiles/ll.dir/SimpleLock.cpp.o
Building CXX object src/ll/CMakeFiles/ll.dir/gIO.cpp.o
[ 38%] [ 38%] [ 38%] [ 38%] [ 38%] [ 38%] [ 38%] [ 38%] [ 38%] Building CXX object src/ll/CMakeFiles/ll.dir/HWTopo.cpp.o
Building CXX object src/llvm/CMakeFiles/llvm.dir/SmallVector.cpp.o
Building CXX object src/llvm/CMakeFiles/llvm.dir/APInt.cpp.o
Building CXX object src/llvm/CMakeFiles/llvm.dir/Twine.cpp.o
Building CXX object src/llvm/CMakeFiles/llvm.dir/StringMap.cpp.o
Building CXX object src/llvm/CMakeFiles/llvm.dir/CommandLine.cpp.o
Building CXX object src/llvm/CMakeFiles/llvm.dir/APFloat.cpp.o
Building CXX object src/llvm/CMakeFiles/llvm.dir/SmallPtrSet.cpp.o
Building CXX object src/llvm/CMakeFiles/llvm.dir/StringRef.cpp.o
Building CXX object src/llvm/CMakeFiles/llvm.dir/Allocator.cpp.o
Scanning dependencies of target capq
make[3]: Warning: File `src/capq_c_library/CMakeFiles/capq.dir/depend.make' has modification time 0.014 s in the future
[ 41%] Scanning dependencies of target mm
[ 54%] [ 54%] [ 54%] [ 54%] [ 54%] Building C object src/capq_c_library/CMakeFiles/capq.dir/qdlocksrc/locks/tatas_lock.c.o
Building C object src/capq_c_library/CMakeFiles/capq.dir/qdlocksrc/locks/qd_lock.c.o
Building C object src/capq_c_library/CMakeFiles/capq.dir/gc/gc.c.o
Building C object src/capq_c_library/CMakeFiles/capq.dir/fat_skiplist.c.o
Building C object src/capq_c_library/CMakeFiles/capq.dir/gc/ptst.c.o
Building C object src/capq_c_library/CMakeFiles/capq.dir/capq.c.o
make[3]: Warning: File `src/mm/CMakeFiles/mm.dir/depend.make' has modification time 0.009 s in the future
[ 58%] [ 64%] [ 64%] Building CXX object src/mm/CMakeFiles/mm.dir/Mem.cpp.o
Building CXX object src/mm/CMakeFiles/mm.dir/PageAlloc.cpp.o
Building CXX object src/mm/CMakeFiles/mm.dir/NumaMem.cpp.o
Linking C static library libcapq.a
make[3]: warning: Clock skew detected. Your build may be incomplete.
[ 64%] Built target capq
make[3]: warning: Clock skew detected. Your build may be incomplete.
[ 64%] Built target mm
make[3]: warning: Clock skew detected. Your build may be incomplete.
[ 64%] Built target ll
make[3]: warning: Clock skew detected. Your build may be incomplete.
[ 64%] Built target llvm
Scanning dependencies of target galois
[ 67%] [ 67%] Building CXX object src/CMakeFiles/galois.dir/Barrier.cpp.o
[ 70%] [ 70%] Building CXX object src/CMakeFiles/galois.dir/Context.cpp.o
Building CXX object src/CMakeFiles/galois.dir/FileGraph.cpp.o
Building CXX object src/CMakeFiles/galois.dir/PreAlloc.cpp.o
[ 87%] [ 96%] [ 96%] [ 96%] [ 96%] [ 96%] [ 96%] [ 96%] [ 96%] Building CXX object src/CMakeFiles/galois.dir/ThreadPool_pthread.cpp.o
Building CXX object src/CMakeFiles/galois.dir/Threads.cpp.o
Building CXX object src/CMakeFiles/galois.dir/Timer.cpp.o
Building CXX object src/CMakeFiles/galois.dir/Support.cpp.o
Building CXX object src/CMakeFiles/galois.dir/PerThreadStorage.cpp.o
Building CXX object src/CMakeFiles/galois.dir/OCFileGraph.cpp.o
Building CXX object src/CMakeFiles/galois.dir/Sampling.cpp.o
Building CXX object src/CMakeFiles/galois.dir/FileGraphParallel.cpp.o
Building CXX object src/CMakeFiles/galois.dir/Termination.cpp.o
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/src/PerThreadStorage.cpp: In static member function 'static unsigned int Galois::Runtime::PerBackend::nextLog2(unsigned int)':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/src/PerThreadStorage.cpp:77:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   while ((1<<i) < size) {
                   ^
Linking CXX static library libgalois.a
[ 96%] Built target galois
Scanning dependencies of target sssp
make[3]: Warning: File `apps/sssp/CMakeFiles/sssp.dir/depend.make' has modification time 0.0014 s in the future
[100%] Building CXX object apps/sssp/CMakeFiles/sssp.dir/SSSP.cpp.o
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm.h:81:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkListHelpers.h:39,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Chunked.h:30,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/BulkSynchronous.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:29,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm_inl.h:82:5: error: prototype for 'int kpq::generic_k_lsm<K, V, Rlx, PQ>::delete_min(K&, V&)' does not match any in class 'kpq::generic_k_lsm<K, V, Rlx, PQ>'
 int generic_k_lsm<K, V, Rlx, PQ>::delete_min(K &key, V &val)
     ^
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkListHelpers.h:39:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Chunked.h:30,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/BulkSynchronous.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:29,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm.h:55:7: error: candidates are: int kpq::generic_k_lsm<K, V, Rlx, PQ>::delete_min(K&, V&, V&)
   int delete_min(K &key, V &val, V &val2);
       ^
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm.h:54:7: error:                 int kpq::generic_k_lsm<K, V, Rlx, PQ>::delete_min(V&, V&)
   int delete_min(V &val, V &val2);
       ^
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm.h:81:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkListHelpers.h:39,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Chunked.h:30,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/BulkSynchronous.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:29,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm_inl.h:130:5: error: prototype for 'int kpq::generic_k_lsm<K, V, Rlx, PQ>::delete_min(V&)' does not match any in class 'kpq::generic_k_lsm<K, V, Rlx, PQ>'
 int generic_k_lsm<K, V, Rlx, PQ>::delete_min(V &val)
     ^
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkListHelpers.h:39:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Chunked.h:30,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/BulkSynchronous.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:29,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm.h:55:7: error: candidates are: int kpq::generic_k_lsm<K, V, Rlx, PQ>::delete_min(K&, V&, V&)
   int delete_min(K &key, V &val, V &val2);
       ^
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm.h:54:7: error:                 int kpq::generic_k_lsm<K, V, Rlx, PQ>::delete_min(V&, V&)
   int delete_min(V &val, V &val2);
       ^
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:36:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::OrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>, 10, true, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgoPP::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgoPP::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgoPP::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgoPP::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgoPP::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgoPP::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgoPP::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 10, true, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgoPP::Process; Args = {Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 10, true, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:726:77:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h:262:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
     if (BlockPeriod && (BlockPeriod < 0 || (p.numPops++ & ((1ull<<BlockPeriod)-1) == 0)))
                                                         ^
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:42:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h: In instantiation of 'Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::CTy* Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::updateLocalOrCreate(Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::perItem&, Index) [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true; Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::CTy = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:217:43:   required from 'void Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::push(const value_type&) [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true; Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::value_type = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:234:16:   required from 'unsigned int Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::push(Iter, Iter) [with Iter = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >::Iterator<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:241:36:   required from 'unsigned int Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::push_initial(const RangeTy&) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:495:38:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::AddInitialWork(const RangeTy&) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; WorkListTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:596:76:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 10, true, true, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 10, true, true, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:510:82:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:185:5: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
     if (lC = Q[i])
     ^
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h: In instantiation of 'Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::CTy* Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::updateLocalOrCreate(Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::perItem&, Index) [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerThreadStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true; Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::CTy = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerThreadStorage, false, 1, true>]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:217:43:   required from 'void Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::push(const value_type&) [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerThreadStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true; Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::value_type = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:234:16:   required from 'unsigned int Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::push(Iter, Iter) [with Iter = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >::Iterator<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerThreadStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:241:36:   required from 'unsigned int Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::push_initial(const RangeTy&) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerThreadStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:495:38:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::AddInitialWork(const RangeTy&) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; WorkListTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:596:76:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1, int, true>, 10, true, true, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1, int, true>, 10, true, true, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:512:90:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:185:5: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h: In instantiation of 'Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::CTy* Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::updateLocalOrCreate(Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::perItem&, Index) [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true; Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::CTy = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 1, true>]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:217:43:   required from 'void Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::push(const value_type&) [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true; Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::value_type = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:234:16:   required from 'unsigned int Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::push(Iter, Iter) [with Iter = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >::Iterator<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:241:36:   required from 'unsigned int Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::push_initial(const RangeTy&) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:495:38:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::AddInitialWork(const RangeTy&) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; WorkListTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:596:76:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1, int, true>, 10, true, true, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1, int, true>, 10, true, true, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:514:95:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:185:5: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:38:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/SkipListObim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::SkipListOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>, 10, true, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 10, true, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 10, true, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:502:81:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/SkipListObim.h:239:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
     if (BlockPeriod && (BlockPeriod < 0 || (p.numPops++ & ((1ull<<BlockPeriod)-1) == 0)))
                                                         ^
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/SkipListObim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::SkipListOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerThreadStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerThreadStorage, false, 1, true>, 10, true, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1, int, true>, 10, true, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1, int, true>, 10, true, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:504:89:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/SkipListObim.h:239:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/SkipListObim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::SkipListOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 1, true>, 10, true, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1, int, true>, 10, true, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1, int, true>, 10, true, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:506:94:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/SkipListObim.h:239:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/SkipListObim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::SkipListOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::VisChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, false, 64, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::VisChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, false, 64, true>, 10, true, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64, int, true>, 10, true, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::SkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64, int, true>, 10, true, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:508:90:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/SkipListObim.h:239:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:42:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>, 10, true, true, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 10, true, true, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 10, true, true, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:510:82:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:248:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
     if (BlockPeriod && (BlockPeriod < 0 || (p.numPops++ & ((1ull<<BlockPeriod)-1) == 0)))
                                                         ^
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerThreadStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerThreadStorage, false, 1, true>, 10, true, true, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1, int, true>, 10, true, true, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1, int, true>, 10, true, true, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:512:90:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:248:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::VectorOrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 1, true>, 10, true, true, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1, int, true>, 10, true, true, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::VectorOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1, int, true>, 10, true, true, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:514:95:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/VectorObim.h:248:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:36:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::OrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerThreadStorage, false, 1, true>; int BlockPeriod = -1; bool BSP = false; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerThreadStorage, false, 1, true>, -1, false, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, -1, false>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, -1, false>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, -1, false>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, -1, false>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, -1, false>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, -1, false>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1, int, true>, -1, false, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1, int, true>, -1, false, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:516:86:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h:262:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
     if (BlockPeriod && (BlockPeriod < 0 || (p.numPops++ & ((1ull<<BlockPeriod)-1) == 0)))
                                                         ^
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::OrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>, 10, true, true, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10, true, true>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10, true, true>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10, true, true>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10, true, true>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10, true, true>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10, true, true>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 10, true, true, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 10, true, true, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:518:84:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h:262:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::OrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedStack, true, Galois::Runtime::PerPackageStorage, true, 64, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedStack, true, Galois::Runtime::PerPackageStorage, true, 64, true>, 10, true, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedLIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedLIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedLIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedLIFO<64>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedLIFO<64>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedLIFO<64>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedLIFO<64, int, true>, 10, true, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedLIFO<64, int, true>, 10, true, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:520:84:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h:262:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::OrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>; int BlockPeriod = 4; bool BSP = true; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>, 4, true, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 4>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 4>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 4>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 4>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 4>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 4>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 4, true, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 4, true, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:522:84:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h:262:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::OrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>; int BlockPeriod = 10; bool BSP = false; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerPackageStorage, false, 64, true>, 10, false, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10, false>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10, false>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10, false>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10, false>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10, false>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<>, 10, false>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 10, false, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedFIFO<64, int, true>, 10, false, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:524:85:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h:262:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::OrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerThreadStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, Galois::Runtime::PerThreadStorage, false, 1, true>, 10, true, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1, int, true>, 10, true, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dChunkedPTFIFO<1, int, true>, 10, true, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:526:87:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h:262:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::OrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::VisChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, false, 64, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = true; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::VisChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, true, false, 64, true>, 10, true, true, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64>, 10, true, true>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64>, 10, true, true>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64>, 10, true, true>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64>, 10, true, true>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64>, 10, true, true>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64>, 10, true, true>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64, int, true>, 10, true, true, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::dVisChunkedFIFO<64, int, true>, 10, true, true, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:528:88:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h:262:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::OrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 64, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 64, true>, 10, true, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64, int, true>, 10, true, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64, int, true>, 10, true, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:530:84:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h:262:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::OrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 1, true>; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 1, true>, 10, true, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1, int, true>, 10, true, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<1, int, true>, 10, true, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:532:92:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h:262:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::OrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10, true, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, true>, 10, true, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, true>, 10, true, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:534:86:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h:262:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::OrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestNodeComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestNodeComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10, true, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestNodeComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestNodeComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestNodeComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestNodeComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestNodeComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestNodeComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestNodeComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, true>, 10, true, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::LockFreeSkipList<UpdateRequestNodeComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, true>, 10, true, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:536:94:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h:262:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::OrderedByIntegerMetric<Indexer, Container, BlockPeriod, BSP, uniformBSP, T, Index, Concurrent>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::HeapMultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >; int BlockPeriod = 10; bool BSP = true; bool uniformBSP = false; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int; bool Concurrent = true]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::HeapMultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >, 10, true, false, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int, true>; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::HeapMultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::HeapMultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::HeapMultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::HeapMultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::HeapMultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::HeapMultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::HeapMultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4>, true>, 10, true, false, int, int, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::OrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::HeapMultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4>, true>, 10, true, false, int, int, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:538:88:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Obim.h:262:57: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:37:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Dobim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::dOrderedByIntegerMetric<Indexer, Container, BlockPeriod, T, Index>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 64, true>; int BlockPeriod = 10; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::dOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 64, true>, 10, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int>; WorkListTy = Galois::WorkList::dOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::dOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::dOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::dOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::dOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::dOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::dOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64, int, true>, 10, int, int> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::dOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64, int, true>, 10, int, int> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:540:80:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Dobim.h:281:58: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
     if (BlockPeriod && (BlockPeriod < 0 || (p->numPops++ & ((1ull<<BlockPeriod)-1) == 0)))
                                                          ^
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:39:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/SkipListDobim.h: In instantiation of 'Galois::optional<T> Galois::WorkList::dSkipListOrderedByIntegerMetric<Indexer, Container, BlockPeriod, T, Index>::pop() [with Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; Container = Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 64, true>; int BlockPeriod = 10; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Index = unsigned int]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::dSkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedMaster<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::ConExtLinkedQueue, false, Galois::Runtime::PerPackageStorage, false, 64, true>, 10, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, unsigned int>; WorkListTy = Galois::WorkList::dSkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::dSkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::dSkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   required from 'static void std::_Function_handler<void(_ArgTypes ...), std::reference_wrapper<_Tp> >::_M_invoke(const std::_Any_data&, _ArgTypes ...) [with _Functor = Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::dSkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process>; _ArgTypes = {}]'
/usr/include/c++/4.8/functional:2452:19:   required from 'std::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::reference_wrapper<Galois::Runtime::{anonymous}::ForEachWork<Galois::WorkList::dSkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, AsyncAlgo<false>::Process> >; <template-parameter-2-2> = void; _Res = void; _ArgTypes = {}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::dSkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64>, 10>; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::dSkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64, int, true>, 10, int, int> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::dSkipListOrderedByIntegerMetric<UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, Galois::WorkList::ChunkedFIFO<64, int, true>, 10, int, int> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:542:82:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/SkipListDobim.h:291:58: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
     if (BlockPeriod && (BlockPeriod < 0 || (p->numPops++ & ((1ull<<BlockPeriod)-1) == 0)))
                                                          ^
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Chunked.h:30:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/BulkSynchronous.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:29,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkListHelpers.h: In instantiation of 'bool Galois::WorkList::kLSMQ_generic<K, Indexer, Rlx, PQ>::try_pop(K&) [with K = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; int Rlx = 256; PQ = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/GlobPQ.h:69:5:   required from 'Galois::optional<T> Galois::WorkList::GlobPQ<T, PQT, Concurrent>::pop() [with T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; PQT = Galois::WorkList::kLSMQ_generic<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> > >; bool Concurrent = true]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:385:59:   required from 'bool Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::runQueue(Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::ThreadLocalData&, WL&) [with int limit = 32; WL = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::kLSMQ_generic<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> > > >; WorkListTy = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::kLSMQ_generic<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> > > >; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:467:29:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::go() [with bool couldAbort = true; bool isLeader = true; WorkListTy = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::kLSMQ_generic<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> > > >; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:520:9:   required from 'void Galois::Runtime::{anonymous}::ForEachWork<WorkListTy, T, FunctionTy>::operator()() [with WorkListTy = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::kLSMQ_generic<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> > > >; T = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; FunctionTy = AsyncAlgo<false>::Process]'
/usr/include/c++/4.8/functional:2101:55:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:600:3:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::kLSMQ_generic<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> > > >; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::kLSMQ_generic<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4>, true> >, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::kLSMQ_generic<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4>, true> >, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:588:86:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkListHelpers.h:1624:31: error: no matching function for call to 'kpq::generic_k_lsm<long unsigned int, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> > >::delete_min(UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>&)'
       return pq.delete_min(key);
                               ^
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkListHelpers.h:1624:31: note: candidates are:
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkListHelpers.h:39:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Chunked.h:30,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/BulkSynchronous.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:29,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm.h:54:7: note: int kpq::generic_k_lsm<K, V, Rlx, PQ>::delete_min(V&, V&) [with K = long unsigned int; V = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; int Rlx = 256; PQ = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >]
   int delete_min(V &val, V &val2);
       ^
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm.h:54:7: note:   candidate expects 2 arguments, 1 provided
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm.h:55:7: note: int kpq::generic_k_lsm<K, V, Rlx, PQ>::delete_min(K&, V&, V&) [with K = long unsigned int; V = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; int Rlx = 256; PQ = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >]
   int delete_min(K &key, V &val, V &val2);
       ^
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm.h:55:7: note:   candidate expects 3 arguments, 1 provided
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm.h: In instantiation of 'void kpq::generic_k_lsm<K, V, Rlx, PQ>::PQWraper::insert(kpq::block<K, V>*) [with K = long unsigned int; V = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; int Rlx = 256; PQ = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_dist_lsm_local_inl.h:111:9:   required from 'void kpq::generic_dist_lsm_local<K, V, Rlx, PQ>::merge_insert(kpq::block<K, V>*, PQ*) [with K = long unsigned int; V = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; int Rlx = 256; PQ = kpq::generic_k_lsm<long unsigned int, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> > >::PQWraper]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_dist_lsm_local_inl.h:72:33:   required from 'void kpq::generic_dist_lsm_local<K, V, Rlx, PQ>::insert(kpq::item<K, V>*, kpq::version_t, PQ*) [with K = long unsigned int; V = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; int Rlx = 256; PQ = kpq::generic_k_lsm<long unsigned int, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> > >::PQWraper; kpq::version_t = unsigned int]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_dist_lsm_local_inl.h:45:35:   required from 'void kpq::generic_dist_lsm_local<K, V, Rlx, PQ>::insert(const K&, const V&, PQ*) [with K = long unsigned int; V = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; int Rlx = 256; PQ = kpq::generic_k_lsm<long unsigned int, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> > >::PQWraper]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_dist_lsm_inl.h:41:5:   required from 'void kpq::generic_dist_lsm<K, V, Rlx, PQ>::insert(const K&, const V&, PQ*) [with K = long unsigned int; V = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; int Rlx = 256; PQ = kpq::generic_k_lsm<long unsigned int, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> > >::PQWraper]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm_inl.h:78:5:   required from 'void kpq::generic_k_lsm<K, V, Rlx, PQ>::insert(const K&, const V&) [with K = long unsigned int; V = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; int Rlx = 256; PQ = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkListHelpers.h:1619:7:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Runtime/ParallelWork.h:596:76:   required from 'void Galois::Runtime::{anonymous}::for_each_impl(const RangeTy&, FunctionTy, const char*) [with WLTy = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::kLSMQ_generic<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> > > >; RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:109:41:   required from 'void Galois::HIDDEN::for_each_gen(RangeTy, FunctionTy, Tuple) [with RangeTy = Galois::Runtime::LocalRange<Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> > >; FunctionTy = AsyncAlgo<false>::Process; Tuple = std::tuple<Galois::loopname, Galois::wl<Galois::WorkList::dChunkedFIFO<32, int, true> >, Galois::wl<Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::kLSMQ_generic<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4>, true> >, true> > >]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:177:117:   required from 'void Galois::for_each_local(ConTy&, FunctionTy, Args ...) [with ConTy = Galois::InsertBag<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; FunctionTy = AsyncAlgo<false>::Process; Args = {Galois::wl<Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::kLSMQ_generic<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, 256, Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4>, true> >, true> >}]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:588:86:   required from 'void AsyncAlgo<UseCas>::operator()(AsyncAlgo<UseCas>::Graph&, AsyncAlgo<UseCas>::GNode) [with bool UseCas = false; AsyncAlgo<UseCas>::Graph = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>; AsyncAlgo<UseCas>::GNode = Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:758:21:   required from 'void run(bool) [with Algo = AsyncAlgo<false>]'
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:793:46:   required from here
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/k_lsm/generic_k_lsm.h:74:19: error: 'push' was not declared in this scope
           push(val);
                   ^
In file included from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/Chunked.h:30:0,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/BulkSynchronous.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkList.h:29,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/Galois.h:27,
                 from /a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/apps/sssp/SSSP.cpp:27:
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkListHelpers.h: In member function 'bool Galois::WorkList::kLSMQ_generic<K, Indexer, Rlx, PQ>::try_pop(K&) [with K = UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>; Indexer = UpdateRequestIndexer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >; int Rlx = 256; PQ = Galois::WorkList::GlobPQ<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, Galois::WorkList::MultiQueue<UpdateRequestComparer<UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*> >, UpdateRequestCommon<Galois::Graph::LC_InlineEdge_Graph<SNode, unsigned int, false, true, true, true>::NodeInfo*>, 4> >]':
/a/home/cc/students/csguests/leibovitch2/klsm2/the_best_project_ever/galois/include/Galois/WorkList/WorkListHelpers.h:1625:5: warning: control reaches end of non-void function [-Wreturn-type]
     }
     ^
make[3]: *** [apps/sssp/CMakeFiles/sssp.dir/SSSP.cpp.o] Error 1
make[2]: *** [apps/sssp/CMakeFiles/sssp.dir/all] Error 2
make[1]: *** [apps/sssp/CMakeFiles/sssp.dir/rule] Error 2
make: *** [sssp] Error 2
